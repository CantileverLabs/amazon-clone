{
  "numFailedTestSuites": 3,
  "numFailedTests": 3,
  "numPassedTestSuites": 0,
  "numPassedTests": 0,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 3,
  "numTotalTests": 3,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1704995331531,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Issue #2"],
          "duration": 125,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/home/vishnu/Documents/projects_can/Amazon/amazon-clone/__tests__/issue_2.test.js:26:35)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "Issue #2 Password field should be disabled if email is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "Password field should be disabled if email is invalid"
        }
      ],
      "endTime": 1704995332387,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIssue #2 › Password field should be disabled if email is invalid\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m       (inputField) \u001b[33m=>\u001b[39m inputField\u001b[33m.\u001b[39mreadOnly\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m     expect(isInputField2ReadOnly)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/issue_2.test.js\u001b[39m\u001b[0m\u001b[2m:26:35)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/home/vishnu/Documents/projects_can/Amazon/amazon-clone/__tests__/issue_2.test.js",
      "startTime": 1704995331580,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Issue #3"],
          "duration": 108,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m{\"handle\": {}, Symbol(_isElementHandle): true}\u001b[39m",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m{\"handle\": {}, Symbol(_isElementHandle): true}\u001b[39m\n    at Object.toBeFalsy (/home/vishnu/Documents/projects_can/Amazon/amazon-clone/__tests__/issue_3.test.js:20:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "Issue #3 should not be able to order with negative qty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should not be able to order with negative qty"
        }
      ],
      "endTime": 1704995333036,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIssue #3 › should not be able to order with negative qty\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeFalsy\u001b[2m()\u001b[22m\n\n    Received: \u001b[31m{\"handle\": {}, Symbol(_isElementHandle): true}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m     \u001b[36mconst\u001b[39m productElement \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39m$(\u001b[32m\".checkoutProduct\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m     expect(productElement)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m }\u001b[33m,\u001b[39m \u001b[35m20000\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/issue_3.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/home/vishnu/Documents/projects_can/Amazon/amazon-clone/__tests__/issue_3.test.js",
      "startTime": 1704995332399,
      "status": "failed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Issue #1"],
          "duration": 79,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": true,
                "expected": false,
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBe (/home/vishnu/Documents/projects_can/Amazon/amazon-clone/__tests__/issue_1.test.js:33:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
          ],
          "fullName": "Issue #1 should be able to detect sidenav overlapping",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should be able to detect sidenav overlapping"
        }
      ],
      "endTime": 1704995333629,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mIssue #1 › should be able to detect sidenav overlapping\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 33 |\u001b[39m       expect(overlap)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m     }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 |\u001b[39m     \u001b[35m30\u001b[39m \u001b[33m*\u001b[39m \u001b[35m1000\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 |\u001b[39m   )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/issue_1.test.js\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/home/vishnu/Documents/projects_can/Amazon/amazon-clone/__tests__/issue_1.test.js",
      "startTime": 1704995333046,
      "status": "failed",
      "summary": ""
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {}
}
